{"version":3,"sources":["utils/injcss.ts","utils/mdloader.ts","utils/Event.ts","utils/Tree.ts","data/blog.data.ts","data/component.data.ts","data/layout.data.ts","data/issue.data.ts","data/tool.data.ts","state/index.ts","fragment/TabTitle.tsx","fragment/TopBar.tsx","fragment/document.tsx","fragment/catalog.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["InjCss","cntr","rules","containeCls","c","push","inject","node","document","createElement","innerHTML","flatMap","v","a","Object","keys","map","selector","input","split","filter","join","field","toLocaleLowerCase","replace","fieldParse","head","appendChild","url","Event","listeners","this","fn","e","gen","on","t","emit","forEach","s","listener","concat","useListener","eve","useEffect","f","off","Tree","id","children","Math","random","toString","tree","find","exist","assign","prase","title","host","converter","showdown","Converter","loader","fetch","then","res","text","html","makeHtml","md","state","index","current","tabs","key","toolData","doc","target","componentData","layoutData","issueData","blogData","onStateChange","Promise","all","rej","promiseArr","getValue","data","className","Array","from","querySelectorAll","dataset","src","indexOf","getChildren","length","get","m","pushChildren","i","console","log","float","height","lineHeight","listStyle","color","margin","padding","cursor","fontSize","transition","position","fontWeight","textShadow","backgroundColor","content","bottom","left","right","boxShadow","borderRadius","TabTitle","props","cur","list","changeTo","onClick","width","top","zIndex","TopBar","useState","setCur","overflowY","minHeight","marginRight","border","Document","focus","setFocus","useRef","setTimeout","ref","TreeList","level","scrollTo","wTop","documentElement","scrollTop","wBottom","scrollHeight","window","innerHeight","requestAnimationFrame","offsetTop","value","getId","data-focus","style","paddingLeft","overflow","display","opacity","Calalog","root","flexDirection","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a04d53e.chunk.js","sourcesContent":["type InjRule = { [key: string]: Partial<CSSStyleDeclaration> }\r\nconst fieldParse = (input: string) => input.split('')\r\n    .map(v => v.toLocaleLowerCase() === v ? v : ('-' + v.toLocaleLowerCase()))\r\n    .join('')\r\n    .replace('css-', '')\r\nconst selectorParse = (input: string) => input.split('')\r\n    .filter(v=>v!=='$')\r\n    .join('')\r\n\r\nconst renderRule = (cntr: string, a: InjRule) => Object.keys(a).map(selector => `\r\n    .${cntr}${selector[0] === '$' ? '' : ' '}${selectorParse(selector)} {\r\n        ${Object.keys(a[selector]).map(field => `${fieldParse(field)}:${a[selector][field as any]}`).join(';\\n        ')}\r\n    }\r\n    \r\n`)\r\nclass InjCss {\r\n    static rules: InjCss[] = []\r\n    static node = document.createElement('style')\r\n\r\n    static inject = () => {\r\n        InjCss.node.innerHTML = InjCss.rules.flatMap(\r\n            v => renderRule(v.cntr, v.rules)\r\n        ).join('')\r\n        document.head.appendChild(InjCss.node)\r\n    }\r\n    static gen(\r\n        containeCls: string,\r\n        rules: InjRule\r\n    ) {\r\n        const c = new InjCss()\r\n        c.cntr = containeCls\r\n        c.rules = rules\r\n\r\n        InjCss.rules.push(c)\r\n        InjCss.inject()\r\n    }\r\n\r\n    private cntr: string = ''\r\n    private rules: InjRule = {}\r\n}\r\nexport {\r\n    InjCss\r\n}","import showdown from 'showdown'\r\nimport 'github-markdown-css'\r\nimport Tree from './Tree'\r\n\r\nconst host = process.env.NODE_ENV === 'development'?\"http://localhost:3001/browser\":'https://bwustudio.github.io/zg-zone/packages/zg-libis/browser'\r\n\r\n\r\nconst converter = new showdown.Converter()\r\n\r\nconst loader = (url: string) => {\r\n    return (fetch(url)\r\n        .then(res => res.text())\r\n        .then(text => ({ html: converter.makeHtml(text), md: text })))\r\n}\r\nexport const loadToDom = (url:string) => loader(url).then<HTMLElement>(v=>{\r\n    const doc = document.createElement('div')\r\n    doc.className = 'markdown-body'\r\n    doc.innerHTML = v.html\r\n    return doc\r\n})\r\n\r\nexport const toMdTree = (tree: Tree<{ title: string, url: string }>) => new Promise<\r\n    Tree<{\r\n        title: string;\r\n        doc: HTMLElement;\r\n        target: HTMLElement | null;\r\n    }>\r\n>((res, rej) => {\r\n    const promiseArr: Promise<{ url: string, html: string, md: string }>[] = []\r\n\r\n    tree.forEach((node) => {\r\n        const url = node.getValue().url\r\n        promiseArr.push(loader(url).then(({ html, md }) => ({ url, html, md })))\r\n    })\r\n\r\n    Promise.all(promiseArr)\r\n        .then(v => {\r\n            return tree.map(({ title, url }) => ({ title, data: v.find(c => c.url === url) }))\r\n                .map(({ data, title }) => ({ title, html: data ? data.html : '' }))\r\n                .map(({ title, html }): { title: string, doc: HTMLElement, target: HTMLElement | null } => {\r\n                    const doc = document.createElement('div')\r\n                    doc.className = 'markdown-body'\r\n                    doc.innerHTML = html\r\n                    return { title, doc, target: null }\r\n                })\r\n        }).then(v => {\r\n            v.forEach(v => {\r\n                Array.from(v.getValue().doc.querySelectorAll('.ifr'))\r\n                    .forEach((v) => {\r\n                        const c = v as HTMLElement\r\n                        if ((c.dataset.src || '').indexOf(host) < 0)\r\n                            c.dataset.src = c.dataset.src ? host + c.dataset.src : ''\r\n                    })\r\n\r\n                if (v.getChildren().length > 0) return\r\n                if (v.get().target) return\r\n                Array.from(v.getValue().doc.querySelectorAll('h2'))\r\n                    .map(c => Tree.gen({\r\n                        title: c.innerHTML,\r\n                        doc: v.getValue().doc,\r\n                        target: c\r\n                    }))\r\n                    .forEach(m => v.pushChildren(m))\r\n            })\r\n            return v\r\n        }).then(v => {\r\n            res(v)\r\n        })\r\n\r\n})","import { Functor } from './fp'\r\nimport { useEffect } from 'react'\r\n\r\nexport default class Event<T> implements Functor<T>{\r\n\r\n    listeners: ((v: T) => void)[] = []\r\n\r\n    static gen<T>() { return new Event<T>() }\r\n\r\n    constructor() { this.listeners = [] }\r\n\r\n    map<S>(fn: (t: T) => S): Event<S> {\r\n        const e = Event.gen<S>()\r\n        const f = (t: T) => { e.emit(fn(t)) }\r\n\r\n        this.on(f)\r\n        return e\r\n    }\r\n    emit(v: T) {\r\n        this.listeners.forEach(s => s(v))\r\n    }\r\n    on(listener: (v: T) => void) { this.listeners = this.listeners.concat([listener]) }\r\n    off(listener: (v: T) => void ) { this.listeners = this.listeners.filter(v => v !== listener) }\r\n}\r\n\r\nconst useListener = <T>(eve: Event<T>) => {\r\n    const e = Event.gen<T>()\r\n    useEffect(() => {\r\n        const f = (t: T) => { e.emit(t) }\r\n        eve.on(f)\r\n        return () => { eve.off(f); }\r\n    })\r\n    return e\r\n}\r\n\r\nconst useEmiter = <T>(eve:Event<T>)=>{\r\n    const e = Event.gen<T>()\r\n    useEffect(()=>{\r\n        e.on(v=>eve.emit(v))\r\n    })\r\n    return e\r\n}\r\n\r\n\r\nexport {\r\n    useListener,\r\n    useEmiter\r\n}","import { Functor } from \"./fp\";\r\n\r\ntype TreeJson<T> = {\r\n    children?: TreeJson<T>[]\r\n} & T\r\n\r\nexport default class Tree<T> implements Functor<T>{\r\n    constructor(v: T) { \r\n        this.v = v; \r\n        this.children = [];\r\n        this.id = Math.random().toString()\r\n    }\r\n    static gen<T>(c: T) { return new Tree<T>(c) }\r\n    static prase<T>(c: TreeJson<T>) {\r\n\r\n        const s = Tree.gen<T>(Object.assign({}, c, { children: null }))\r\n        s.children = c.children ? c.children.map(v => Tree.prase(v)) : []\r\n\r\n        return s\r\n    }\r\n\r\n    private id: string\r\n    private v: T\r\n    private children: Tree<T>[]\r\n    get() { return this.v }\r\n    getId() { return this.id}\r\n\r\n    map<S>(fn: (t: T) => S): Tree<S> {\r\n        const c = Tree.gen(fn(this.v))\r\n        c.children = this.children.map(v => v.map(fn))\r\n        return c\r\n    }\r\n\r\n    forEach(fn: (t: Tree<T>) => void): void {\r\n        const c = fn(this)\r\n        this.children.map(v => v.forEach(fn))\r\n        return c\r\n    }\r\n\r\n    getValue(){\r\n        return this.v\r\n    }\r\n    getChildren() {\r\n        return this.children\r\n    }\r\n    pushChildren(tree:Tree<T>){\r\n        this.children.push(tree)\r\n    }\r\n    exist(node: Tree<T>|null): boolean {\r\n        if (this === node)\r\n            return true\r\n        else\r\n            return this.children.find(v => v.exist(node)) ? true : false\r\n    }\r\n}","import Tree from '../utils/Tree'\r\n\r\nexport default Tree.prase<{ url: string, title: string }>({\r\n    title: '概述',\r\n    url: './md/blog/index.md'\r\n})\r\n","import Tree from '../utils/Tree'\r\n\r\nexport default Tree.prase<{ url: string, title: string }>({\r\n    title: '概述',\r\n    url: './md/component/index.md',\r\n    children: [\r\n        { title: 'HTML 原生组件', url: './md/component/html.md' },\r\n\r\n        { title: 'miniUI 组件', url: './md/component/miniUI.md'  },\r\n\r\n        { title: 'shelf 自研组件', url:  './md/component/shelf.md'  }\r\n    ]\r\n})","import Tree from '../utils/Tree'\r\n\r\nexport default Tree.prase<{ url: string, title: string }>({\r\n    title: '概述',\r\n    url: './md/layout/index.md'\r\n})","import Tree from '../utils/Tree'\r\n\r\nexport default Tree.prase<{url: string ,title:string}>({\r\n    title: '概述',\r\n    url: './md/issue/index.md'\r\n})","import Tree from '../utils/Tree'\r\n\r\nexport default Tree.prase<{ url: string, title: string }>({\r\n    title: '概述',\r\n    url: './md/tool/index.md'\r\n})","import blogData from '../data/blog.data'\r\nimport componentData from '../data/component.data'\r\nimport layoutData from '../data/layout.data'\r\nimport issueData from '../data/issue.data'\r\nimport toolData from '../data/tool.data'\r\nimport Tree from '../utils/Tree'\r\nimport Event from '../utils/Event'\r\nimport { toMdTree,loadToDom }   from '../utils/mdloader'\r\nimport { stat } from 'fs'\r\n\r\ntype State = {\r\n    index: HTMLElement;\r\n    current: Tree<{\r\n        title: string;\r\n        doc: HTMLElement;\r\n        target: HTMLElement | null;\r\n    }> | null;\r\n    tabs: {\r\n        key: string\r\n        text: string;\r\n        tree: Tree<{\r\n            title: string;\r\n            doc: HTMLElement;\r\n            target: HTMLElement | null;\r\n        }>,\r\n        url: Tree<{\r\n            title: string;\r\n            url: string\r\n        }>\r\n    }[];\r\n}\r\n\r\nconst state: State = {\r\n    index: document.createElement('div'),\r\n    current: null,\r\n    tabs: [\r\n        { key: 'tool', text: '工具库', url: toolData, tree: Tree.gen({ title: '', doc: document.createElement('div'), target: null }) },\r\n        { key: 'component', text: '组件', url: componentData, tree: Tree.gen({ title: '', doc: document.createElement('div'), target: null }) },\r\n        { key: 'layout', text: '布局', url: layoutData, tree: Tree.gen({ title: '', doc: document.createElement('div'), target: null }) },\r\n        { key: 'issue', text: '讨论', url: issueData, tree: Tree.gen({ title: '', doc: document.createElement('div'), target: null }) },\r\n        { key: 'blog', text: '博客', url: blogData, tree: Tree.gen({ title: '', doc: document.createElement('div'), target: null }) },\r\n    ]\r\n}\r\n\r\nconst onStateChange = Event.gen<State>()\r\n\r\nPromise.all(\r\n    state.tabs.map(v=>v.url).map(v=>toMdTree(v))\r\n).then(v=>{\r\n    v.forEach((v,i)=>{\r\n        state.tabs[i].tree = v\r\n    })\r\n    onStateChange.emit(state)\r\n    console.log(state)\r\n})\r\n\r\nloadToDom('./md/index.md').then(v=>{\r\n    state.index = v\r\n    onStateChange.emit(state)\r\n})\r\n\r\nexport {\r\n    state,\r\n    onStateChange\r\n}","import React from 'react'\r\nimport { InjCss } from '../utils/injcss'\r\nimport Tree from '../utils/Tree'\r\n\r\ntype Props = {\r\n    cur: Tree<{\r\n        title: string;\r\n        doc: HTMLElement;\r\n        target: HTMLElement | null;\r\n    }> | null,\r\n    list: {\r\n        key: string;\r\n        text: string;\r\n        tree: Tree<{\r\n            title: string;\r\n            doc: HTMLElement;\r\n            target: HTMLElement | null;\r\n        }>\r\n    }[],\r\n    changeTo: (tree: Tree<{\r\n        title: string;\r\n        doc: HTMLElement;\r\n        target: HTMLElement | null;\r\n    }> | null) => void\r\n}\r\n\r\nconst TabTitle: React.FC<Props> = (props: Props) => {\r\n\r\n    const { cur, list, changeTo } = props\r\n\r\n    return <ol className='tab_title'>{\r\n        list.map(v => <li key={v.key} className={'tab_title--li' + (v.tree.exist(cur) ? ' tab_title--li__check' : '')} onClick={() => {\r\n            changeTo(v.tree)\r\n        }}>{v.text}</li>)\r\n    }</ol>\r\n}\r\n\r\nInjCss.gen('tab_title', {\r\n    '': {\r\n        float: 'left',\r\n        height: '60px',\r\n        lineHeight: '60px',\r\n        listStyle: 'none',\r\n        color: 'white',\r\n        margin: '0',\r\n        padding: '0 20px',\r\n    },\r\n    'li': {\r\n        float: 'left',\r\n        margin: '0',\r\n        padding: '0 20px',\r\n        height: '60px',\r\n        lineHeight: '65px',\r\n        listStyle: 'none',\r\n        color: 'rgba(255,255,255,1)',\r\n        // color: '##706c61',\r\n        cursor: 'pointer',\r\n        fontSize: '18px',\r\n        transition: 'all 0.2s ease-out',\r\n        position: 'relative',\r\n        fontWeight: 'bold',\r\n        textShadow: '0 3px 3px rgba(0,0,0,0.2)',\r\n        backgroundColor: 'rgba(255,255,255,0)'\r\n    },\r\n    'li.tab_title--li__check': {\r\n        color: '#393e46',\r\n        lineHeight: '60px',\r\n        backgroundColor: 'rgba(255,255,255,0.5)'\r\n    },\r\n    'li.tab_title--li::after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        bottom: '0',\r\n        left: '0',\r\n        right: '0',\r\n        transition: 'all 0.2s ease-out',\r\n        height: '0',\r\n        backgroundColor: '#393e46',\r\n        boxShadow: '0 1px 3px 0 rgba(0,0,0,0.5)',\r\n    },\r\n    'li.tab_title--li__check::after': {\r\n        height: '4px',\r\n        borderRadius: '2px 2px 0 0'\r\n    }\r\n})\r\nexport default TabTitle","import React, { useState } from 'react'\r\nimport { useListener } from '../utils/Event'\r\nimport { InjCss } from '../utils/injcss'\r\nimport { state, onStateChange } from '../state/index'\r\nimport Tree from '../utils/Tree'\r\nimport TabTitle from './TabTitle'\r\n\r\nconst TopBar: React.FC = () => {\r\n  const [cur, setCur] = useState<Tree<{\r\n    title: string;\r\n    doc: HTMLElement;\r\n    target: HTMLElement | null;\r\n  }> | null>(state.current)\r\n\r\n  const list = state.tabs\r\n\r\n  const changeTo = (v: Tree<{\r\n    title: string;\r\n    doc: HTMLElement;\r\n    target: HTMLElement | null;\r\n  }> | null) => {\r\n    state.current = v\r\n    onStateChange.emit(state)\r\n  }\r\n\r\n  useListener(onStateChange)\r\n    .map(v => v.current)\r\n    .on(v => setCur(v))\r\n\r\n  return (\r\n    <div className=\"topBar\">\r\n      <i className={\"zg zg-zglogo logo \" + (!cur ? 'focus' : '')} onClick={() => changeTo(null)}></i>\r\n      <TabTitle cur={cur} list={list} changeTo={changeTo} />\r\n    </div>\r\n  );\r\n}\r\n\r\nInjCss.gen('topBar', {\r\n  '': {\r\n    height: '60px',\r\n    width: '100%',\r\n    position: 'fixed',\r\n    padding: '0 40px',\r\n    top: '0',\r\n    zIndex: '2',\r\n    backgroundColor: \"#d6e5fa\"//'#353535',\r\n  },\r\n  '.logo': {\r\n    height: '60px',\r\n    float: 'left',\r\n    fontSize: \"75px\",\r\n    lineHeight: \"72px\",\r\n    color: '#333',\r\n    padding: '0 20px',\r\n    fontWeight: 'normal',\r\n    transition: 'all 0.3s ease-out',\r\n    textShadow: '0 3px 3px rgba(0,0,0,0.3)',\r\n    cursor: \"pointer\"\r\n  },\r\n  '.logo.focus': {\r\n    fontWeight: 'bold',\r\n    color: '#445',\r\n    textShadow: '3px 3px 0 rgba(0,0,0,0.3)',\r\n  },\r\n})\r\n\r\nexport default TopBar","import React, { useState, useRef } from 'react';\r\nimport { InjCss } from '../utils/injcss';\r\nimport { state, onStateChange } from '../state/index'\r\nimport { useListener } from '../utils/Event';\r\n\r\nconst Document: React.FC = () => {\r\n    const [focus, setFocus] = useState(true)\r\n    const doc = useRef(document.createElement('div'))\r\n\r\n    useListener(onStateChange)\r\n        .map(v => v.current)\r\n        .map(v => v ? v.get().doc : v)\r\n        .on(v => {\r\n            if (v) {\r\n                doc.current.innerHTML = ''\r\n                doc.current.appendChild(v)\r\n\r\n                Array.from(v.querySelectorAll('.ifr'))\r\n                    .forEach(v => {\r\n                        v.innerHTML = ''\r\n                        setTimeout(() => {\r\n                            v.innerHTML = `<iframe style=\"height:100%;width:100%\" src= ${(v as HTMLElement).dataset.src}></iframe>`\r\n                        }, 300)\r\n                    })\r\n\r\n                setFocus(false)\r\n            }\r\n            else {\r\n                doc.current.innerHTML = ''\r\n                doc.current.appendChild(state.index)\r\n                setFocus(true)\r\n            }\r\n        })\r\n\r\n    return <div className='document'>\r\n        <div\r\n            className={'markdown-body content' + (focus ? ' focus' : '')}\r\n            ref={doc}\r\n        >\r\n        </div>\r\n        <div\r\n            className=\"background\"\r\n        ></div>\r\n    </div>\r\n}\r\n\r\n\r\nInjCss.gen('document', {\r\n    '': {\r\n        width: '100%',\r\n        overflowY: 'hidden',\r\n        minHeight: '100%',\r\n    },\r\n    '.content': {\r\n        minHeight: '100%',\r\n        position: 'relative',\r\n        marginRight: \"500px\",\r\n        zIndex: '1',\r\n        padding: '60px',\r\n        transition: 'all 0.3s ease-out',\r\n    },\r\n    '.content.focus': {\r\n        marginRight: \"0\",\r\n    },\r\n    '.background': {\r\n        transition: 'all 0.3s ease-out',\r\n        position: \"fixed\",\r\n        left: '0',\r\n        top: '0',\r\n        bottom: \"0\",\r\n        right: \"500px\",\r\n        backgroundColor: 'rgba(255,255,255,1)',\r\n        boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\r\n    },\r\n    '.content.focus + .background': {\r\n        right: \"0\",\r\n        backgroundColor: 'rgba(255,255,255,0)',\r\n        boxShadow: '0 2px 4px rgba(0,0,0,0)'\r\n    },\r\n    '.ifr': {\r\n        height: '320px',\r\n        width: \"400px\",\r\n        margin: '16px 0',\r\n        boxShadow: ' 0 1px 3px 0 rgba(0,0,0,0.3) inset'\r\n    },\r\n    '.ifr iframe': {\r\n        height: '100%',\r\n        width: \"100%\",\r\n        border:'none'\r\n    }\r\n})\r\n\r\nexport default Document","import React, { useState, useEffect } from 'react';\r\nimport { InjCss } from '../utils/injcss';\r\nimport Tree from '../utils/Tree'\r\nimport { state, onStateChange } from '../state/index'\r\nimport { useListener } from '../utils/Event'\r\n\r\nconst Calalog: React.FC = () => {\r\n    const [cur, setCur] = useState(state.current)\r\n    const root = state.tabs.find(v => v.tree.exist(cur))\r\n\r\n    useListener(onStateChange).map(v => v.current).on(v => setCur(v))\r\n\r\n    return <div className=\"calalog\">\r\n        <div className=\"calalog-hidden_scrollbar\">\r\n            {\r\n                root\r\n                    ? <div\r\n                        onClick={() => { state.current = root.tree; onStateChange.emit(state) }}\r\n                        className={'calalog-title' + (cur === root.tree ? ' focus' : '')}\r\n                    >{root.tree.get().title}</div>\r\n                    : ''\r\n            }\r\n            <TreeList focus={cur} list={root ? root.tree.getChildren() : []}></TreeList>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nconst scrollTo = (top: number, i = 0) => {\r\n    const wTop = document.documentElement.scrollTop\r\n    const wBottom = document.documentElement.scrollHeight - window.innerHeight + document.documentElement.scrollTop\r\n\r\n    if (\r\n        (wTop === 0 || i > 20 || wBottom === 0 || top === wTop)\r\n        && i !== 0\r\n    ) return\r\n\r\n    document.documentElement.scrollTop = (top + wTop) / 2\r\n\r\n    requestAnimationFrame(v=>scrollTo(top, i + 1))\r\n}\r\n\r\nconst TreeList: React.FC<{\r\n    list: Tree<{\r\n        title: string;\r\n        doc: HTMLElement;\r\n        target: HTMLElement | null;\r\n    }>[],\r\n    focus: Tree<{\r\n        title: string;\r\n        doc: HTMLElement;\r\n        target: HTMLElement | null;\r\n    }> | null,\r\n    level?: number\r\n}> = (props) => {\r\n\r\n    const { list, level = 0, focus } = props\r\n\r\n    useEffect(() => {\r\n        const c = state.current ? state.current.get().target : null\r\n        if (c) {\r\n            scrollTo( c.offsetTop)\r\n        }\r\n\r\n        document.title = `You clicked ${''} times`;\r\n    });\r\n\r\n    return <ol className=\"cl_tree\">\r\n        {list.map(v => {\r\n            const value = v.get()\r\n            const children = v.getChildren()\r\n            return <li\r\n                key={v.getId()}\r\n                data-focus={focus === v ? true : false}>\r\n\r\n                <div\r\n                    style={{ paddingLeft: level * 20 + 20 + 'px' }}\r\n                    className=\"cl_tree-title\"\r\n                    onClick={() => { state.current = v; onStateChange.emit(state) }}>\r\n                    {value.title}\r\n                </div>\r\n                {\r\n                    children.length === 0\r\n                        ? ''\r\n                        : <TreeList focus={focus} list={children} level={level + 1} />\r\n                }\r\n            </li>\r\n\r\n        })}\r\n    </ol>\r\n}\r\n\r\nInjCss.gen('calalog', {\r\n    '': {\r\n        position: 'fixed',\r\n        right: '200px',\r\n        height: '100%',\r\n        top: '60px',\r\n        overflow: 'hidden',\r\n        width: '300px',\r\n    },\r\n    '.calalog-title': {\r\n        fontWeight: 'bold',\r\n        fontSize: '18px',\r\n        cursor: 'pointer',\r\n        display: 'inline-block',\r\n        position: 'relative',\r\n        padding: '8px 0',\r\n        color: '#333',\r\n        transition: 'all 0.2s ease-out',\r\n        textShadow: '0 0 0 rgba(0,0,0,0.2)'\r\n    },\r\n    '.calalog-title::after': {\r\n        content: '\"\"',\r\n        width: '0',\r\n        position: 'absolute',\r\n        bottom: '0',\r\n        height: '3px',\r\n        transition: 'all 0.2s ease-out',\r\n        backgroundColor: '#666',\r\n        left: '0',\r\n        boxShadow: '0 0 0 rgba(0,0,0,0.2)'\r\n    },\r\n\r\n    '.calalog-title.focus': {\r\n        textShadow: '0 3px 2px rgba(0,0,0,0.2)'\r\n    },\r\n    '.calalog-title.focus::after': {\r\n        width: '100%',\r\n        boxShadow: '0 2px 4px rgba(0,0,0,0.2)'\r\n    },\r\n    '.calalog-hidden_scrollbar': {\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        marginRight: '-17px',\r\n        padding: '50px'\r\n    },\r\n    '.cl_tree': {\r\n        listStyle: 'none',\r\n        padding: '0',\r\n        // paddingLeft: '20px',\r\n    },\r\n    '.cl_tree-title': {\r\n        padding: '4px 0',\r\n        cursor: 'pointer',\r\n        position: 'relative',\r\n        textShadow: '0 0 0 rgba(0,0,0,0.2)'\r\n    },\r\n    'li[data-focus=\"true\"] > .cl_tree-title': {\r\n        fontWeight: 'bolder',\r\n        textShadow: '0 3px 3px rgba(0,0,0,0.2)'\r\n    },\r\n    '.cl_tree-title::after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        left: '0',\r\n        top: '0',\r\n        bottom: '0',\r\n        width: '20px',\r\n        backgroundColor: '#666',\r\n        opacity: '0',\r\n        transition: 'all 0.2s ease-out'\r\n    },\r\n    'li[data-focus=\"true\"] > .cl_tree-title::after': {\r\n        width: '4px',\r\n        opacity: '1',\r\n        boxShadow: '0 3px 3px rgba(0,0,0,0.2)'\r\n    }\r\n})\r\n\r\nexport default Calalog","import React from 'react';\r\nimport { InjCss } from './utils/injcss';\r\nimport TopBar from './fragment/TopBar'\r\nimport Document from './fragment/document'\r\nimport Calalog from './fragment/catalog';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <TopBar />\r\n      <Document />\r\n      <Calalog />\r\n    </div>\r\n  );\r\n}\r\n\r\nInjCss.gen('App', {\r\n  '': {\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  }\r\n})\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}